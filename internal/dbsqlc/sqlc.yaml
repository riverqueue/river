version: "2"
sql:
  - engine: "postgresql"
    queries:
      - river_job.sql
      - river_leader.sql
    schema:
      - river_job.sql
      - river_leader.sql
    gen:
      go:
        package: "dbsqlc"
        sql_package: "pgx/v5"
        out: "."
        emit_exact_table_names: true
        emit_methods_with_db_argument: true
        emit_result_struct_pointers: true

        rename:
          river_job_state: "JobState"
          river_job_state_available: "JobStateAvailable"
          river_job_state_cancelled: "JobStateCancelled"
          river_job_state_completed: "JobStateCompleted"
          river_job_state_discarded: "JobStateDiscarded"
          river_job_state_retryable: "JobStateRetryable"
          river_job_state_running: "JobStateRunning"
          river_job_state_scheduled: "JobStateScheduled"
          ttl: "TTL"

        overrides:
          # broad types
          - db_type: "pg_catalog.interval"
            go_type: "time.Duration"
          - db_type: "pg_catalog.interval"
            # It seems like this could be the simpler `go_type: "*time.Duration"`, but
            # that outputs double pointers like `**time.Duration` for reasons that are
            # beyond me (bug?). The expanded version of `go_type` usage below works.
            go_type:
              import: "time"
              type: "Duration"
              pointer: true
            nullable: true
          - db_type: "timestamptz"
            go_type: "time.Time"
          - db_type: "timestamptz"
            go_type:
              type: "time.Time"
              pointer: true
            nullable: true

          # specific columns
          - column: "river_job.errors"
            go_type:
              type: "[]AttemptError"
